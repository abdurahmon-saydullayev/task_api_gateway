definitions:
  blogpost_service.Author:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      updated_at:
        type: string
    type: object
  blogpost_service.Book:
    properties:
      author:
        $ref: '#/definitions/blogpost_service.Author'
      author_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  blogpost_service.CreateAuthor:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  blogpost_service.CreateBook:
    properties:
      author_id:
        type: string
      name:
        type: string
      price:
        type: string
    type: object
  blogpost_service.GetAuthorListResponse:
    properties:
      authors:
        items:
          $ref: '#/definitions/blogpost_service.Author'
        type: array
      count:
        type: integer
    type: object
  blogpost_service.GetBookListResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/blogpost_service.Book'
        type: array
      count:
        type: integer
    type: object
  blogpost_service.UpdateAuthorResponse:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
  blogpost_service.UpdateBookResponse:
    properties:
      author_id:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: string
    type: object
  http.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /Book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Book
      operationId: delete_Book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Book data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Book
      tags:
      - Book
  /author:
    get:
      consumes:
      - application/json
      description: Get Author List
      operationId: get_Author_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetAllAuthorResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.GetAuthorListResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Author List
      tags:
      - Author
    post:
      consumes:
      - application/json
      description: Create Author
      operationId: create_author
      parameters:
      - description: CreateAuthor
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/blogpost_service.CreateAuthor'
      produces:
      - application/json
      responses:
        "200":
          description: GetAuthorBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.Author'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Author
      tags:
      - Author
  /author/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Author
      operationId: delete_Author
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Author data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Author
      tags:
      - Author
    get:
      consumes:
      - application/json
      description: Get Author By ID
      operationId: get_Author_by_id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Author
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.Author'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Author By ID
      tags:
      - Author
    put:
      consumes:
      - application/json
      description: Update Author
      operationId: update_Author
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateAuthorRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/blogpost_service.UpdateAuthorResponse'
      produces:
      - application/json
      responses:
        "200":
          description: Author data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.Author'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Author
      tags:
      - Author
  /book:
    get:
      consumes:
      - application/json
      description: Get Book List
      operationId: get_book_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetAllBookResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.GetBookListResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Book List
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: Create Book
      operationId: create_book
      parameters:
      - description: CreateBook
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/blogpost_service.CreateBook'
      produces:
      - application/json
      responses:
        "200":
          description: GetBookBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.Book'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Book
      tags:
      - Book
  /book/{id}:
    get:
      consumes:
      - application/json
      description: Get Book By ID
      operationId: get_Book_by_id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Book
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.Book'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Book By ID
      tags:
      - Book
    put:
      consumes:
      - application/json
      description: Update Book
      operationId: update_book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateBookRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/blogpost_service.UpdateBookResponse'
      produces:
      - application/json
      responses:
        "200":
          description: Book data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/blogpost_service.Book'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Book
      tags:
      - Book
swagger: "2.0"
